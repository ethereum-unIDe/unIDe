pragma solidity ^0.4.0;
contract Crpyt {

    struct User {
        string name;
        string email;
        bool valid;
        address addr;
    }
    
    address owner;

    function mortal() {
        owner=msg.sender;
    }
    
    function kill() {
        if(msg.sender == owner) {
            selfdestruct(owner);
        }
    }
    
    function getOwner() returns (address own) {
        return owner;
    }
    
    mapping(address => User) users;
    
    function setUser(string name, string email, address addr) {
        if (users[msg.sender].valid != true || msg.sender == users[msg.sender].addr){
		    users[msg.sender].name = name;
		    users[msg.sender].email = email;
		    users[msg.sender].valid = true;
		    users[msg.sender].addr = msg.sender;
        }
    }
    
    function getUser() returns (string name, string email) {
        return (users[msg.sender].name, users[msg.sender].email);
    }
}
